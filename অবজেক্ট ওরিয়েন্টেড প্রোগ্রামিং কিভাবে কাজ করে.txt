ক্লাস (Class)
******************************************************************
ক্লাস একটি ইউজার-ডিফাইন্ড বা ব্যবহারকারী নির্ধারিত ডাটা টাইপ, যা প্রোগ্রামে বিল্ট-ইন ডাটা টাইপের মত ক্রিয়া করে। একটি ক্লাসে বিল্ট-ইন ডাটা টাইপের কয়েকটি ভেরিয়েবল বা চলক এবং ঐ ভেরিয়েবলগুলোকে এক্সেস করার জন্য কতগুলো ফাংশন থাকে। প্রয়োজন অনুযায়ী প্রোগ্রামে ক্লাস বর্ণনা করা হয়।


অবজেক্ট (Object)
******************************************************************
আবার পৃথিবীটাও একটি অবজেক্ট। প্রতিটি অবজেক্টের কিছু বৈশিষ্ট্য থাকে; এদের কতগুলো বৈশিষ্ট্য সাধারণ, যেগুলোর জন্য একটি অবজেক্টের সাথে অন্য এক বা একাধিক অবজেক্টের মিল থাকে এবং কতগুলো বৈশিষ্ট্য নিজস্ব, যেগুলোর জন্য একটি অবজেক্ট অন্য এক বা একাধিক অবজেক্ট থেকে আলাদা। পৃথিবীর কোন দুটো অবজেক্ট হুবহু এক নয়। আকার, আয়তন, গুণগত মান ইত্যাদি বৈশিষ্ট্য হুবহু এক মনে হলেও অন্তত অবস্থানের দিক থেকে এদের মধ্যে পার্থক্য থাকে। যেমন, একই রকমের দুটি কলম একই মনে হলেও এরা আসলে এক নয়। কারণ দুটি কলম কখনও একই সময়ে একটি টেবিলের একই অবস্থানে থাকতে পারে না। সূতরাং যে কোন দুটো অবজেক্ট কখনও এক নয়। তবে পার্থিব জীবনের অবজেক্টের চেয়ে অবজেক্ট অরিয়েন্টেড প্রোগ্রামিং-এর অবজেক্ট -এর বৈশিষ্ট্য একটু 


অবজেক্ট অরিয়েন্টেড প্রোগ্রামিং কিভাবে কাজ করে?
******************************************************************
প্রতিটি অবজেক্ট তার নিজস্ব ডাটা এবং ফাংশন নিয়ন্ত্রণ করে। প্রতিটি অবজেক্ট এর ডাটা এবং ফাংশন একটি একক ইউনিটের মতো ক্রিয়া করে বা কাজ করে। প্রোসিডিউর অরিয়েন্টেড প্রোগ্রামিং-এ ফাংশনের গুরুত্ব বেশি দেয়ার ফলে প্রোগ্রামের অকার বেড়ে যায় তখন এ প্রোগ্রামের ডিবাগিং, ম্যানিপুলেশন, রক্ষণাবেক্ষণ করা জটিল হয়ে যায়। প্রসিডিউর অরিয়েন্টেড প্রোগ্রামিং এর এ সকল অসুবিধা দুর করার জন্য এ অবজেক্ট অরিয়েন্টেড প্রোগ্রামিং-এর আবির্ভাব। অবজেক্ট অরিয়েন্টেড প্রোগ্রামিং এ একটি বৃহৎ সমস্যা (Problem) কে ছোট ছোট অংশে বিভক্ত করা হয়। ছোট ছোট অংশগুলিকে Sub problem বা Object বলা হয়। OOP-তে ফাংশনের চেয়ে ডাটার ওপর বেশি গুরুত্বারোপ করা হয়। প্রতিটি Object এর জন্যই কিছু Data থাকে এবং ঐ ডাটাগুলোকে কাজ করানোর জন্য Specific কিছু ফাংশন ও থাকে। উল্লেখ্য যে, কোন অবজেক্টের ফাংশন অন্য কোন অবজেক্টের ফাংশনকে নিয়েও কাজ করতে পারে


















